/* Eric Meyer's Reset */
/* http://meyerweb.com/eric/tools/css/reset/ 
   v2.0 | 20110126
   License: none (public domain)
*/

html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed, 
figure, figcaption, footer, header, hgroup, 
menu, nav, output, ruby, section, summary,
time, mark, audio, video {
	margin: 0;
	padding: 0;
	border: 0;
	font-size: 100%;
	font: inherit;
	vertical-align: baseline;
}
/* HTML5 display-role reset for older browsers */
article, aside, details, figcaption, figure, 
footer, header, hgroup, menu, nav, section {
	display: block;
}
body {
	line-height: 1;
}
ol, ul {
	list-style: none;
}
blockquote, q {
	quotes: none;
}
blockquote:before, blockquote:after,
q:before, q:after {
	content: '';
	content: none;
}
table {
	border-collapse: collapse;
	border-spacing: 0;
}

/* END OF RESET */

/* Mobile Styles */
body {
	font-family: 'Roboto', 'Open Sans', sans-serif; /* Default for the entire body */
	font-size: 24px; /* Example base size */
	line-height: 1.5; /* Example line height for readability */
	background-color: #162f71; /* Deep Navy */
	color: #eeeeee; /* Light Text */
	justify-items: center;
	align-content: center;
}

h1 {
	font-size: 2.5em;
}

h2 {
	font-size: 2.0em;
}

h3 {
	font-size: 1.5em;
}

h4 {
	font-size: 1.25em;
}

h5 {
	font-size: 1.15em;
}

h6 {
	font-size: 1.10em;
}

#style-guide, #component-checks {
	display: grid;
	grid-template-columns: 1fr;
	max-width: 1200px;
	width: 100%;
}

/* Color Palette Classes */
.primary-bg {
	background-color: #162f71; /* Deep Navy */
}

.primary-text {
	color: #eeeeee; /* Light Text */
}

.secondary-bg {
	background-color: #0088b0; /* Medium Blue (using one of your secondary colors) */
}

.secondary-text {
	color: #111111; /* Dark Text (using a contrasting neutral) */
}

.accent-bg {
	background-color: #00a2d3; /* Bright Cyan */
}

.accent-text {
	color: #111111; /* Dark Text */
}

.neutral-light-bg {
	background-color: #eeeeee;
}

.neutral-light-text {
	color: #111111;
}

.neutral-dark-bg {
	background-color: #111111;
}

.neutral-dark-text {
	color: #eeeeee;
}

/* Apply these classes to your color swatches */
#color-1 div {
	display: grid;
	grid-template-columns: 1fr; /* Stack text on top */
	padding: 10px;
	border-radius: 5px;
	text-align: center;
}

#color-1 .swatch {
	height: 100px;
	width: 100%;
	border-radius: 5px;
}

#color-1 .deep-navy .swatch {
	background-color: #162f71;
}

#color-1 .light-text {
	color: #eeeeee;
}

#color-2 div {
	display: grid;
	grid-template-columns: 1fr; /* Stack text on top */
	padding: 10px;
	border-radius: 5px;
	text-align: center;
}

#color-2 .swatch {
	height: 100px;
	width: 100%;
	border-radius: 5px;
}

#color-2 .teal-blue .swatch {
	background-color: #006d8e;
}

#color-2 .light-text {
	color: #eeeeee;
}

#color-3 div {
	display: grid;
	grid-template-columns: 1fr; /* Stack text on top */
	padding: 10px;
	border-radius: 5px;
	text-align: center;
}

#color-3 .swatch {
	height: 100px;
	width: 100%;
	border-radius: 5px;
}

#color-3 .bright-cyan .swatch {
	background-color: #00a2d3;
}

#color-3 .dark-text {
	color: #111111;
}

#color-4 div {
	display: grid;
	grid-template-columns: 1fr; /* Stack text on top */
	padding: 10px;
	border-radius: 5px;
	text-align: center;
}

#color-4 .swatch {
	height: 100px;
	width: 100%;
	border-radius: 5px;
}

#color-4 .dark-moderate-blue .swatch {
	background-color: #194e70;
}

#color-4 .light-text {
	color: #eeeeee;
}

#color-5 div {
	display: grid;
	grid-template-columns: 1fr; /* Stack text on top */
	padding: 10px;
	border-radius: 5px;
	text-align: center;
}

#color-5 .swatch {
	height: 100px;
	width: 100%;
	border-radius: 5px;
}

#color-5 .medium-blue .swatch {
	background-color: #0088b0;
}

#color-5 .dark-text {
	color: #111111;
}

#color-6 div {
	display: grid;
	grid-template-columns: 1fr; /* Stack text on top */
	padding: 10px;
	border-radius: 5px;
	text-align: center;
}

#color-6 .swatch {
	height: 100px;
	width: 100%;
	border-radius: 5px;
}

#color-6 .dark-teal .swatch {
	background-color: #0e4347;
}

#color-6 .light-text {
	color: #eeeeee;
}

#color-7 div {
	display: grid;
	grid-template-columns: 1fr; /* Stack text on top */
	padding: 10px;
	border-radius: 5px;
	text-align: center;
}

#color-7 .swatch {
	height: 100px;
	width: 100%;
	border-radius: 5px;
}

#color-7 .neutral-dark .swatch {
	background-color: #111111;
}

#color-7 .light-text {
	color: #eeeeee;
}

#color-8 div {
	display: grid;
	grid-template-columns: 1fr; /* Stack text on top */
	padding: 10px;
	border-radius: 5px;
	text-align: center;
}

#color-8 .swatch {
	height: 100px;
	width: 100%;
	border-radius: 5px;
}

#color-8 .neutral-light .swatch {
	background-color: #eeeeee;
}

#color-8 .dark-text {
	color: #111111;
}

/*	class styles	*/
.component-example {
	margin-bottom: 20px;
	padding: 15px;
	border: 1px solid #eee;
	border-radius: 5px;
}

.component-example h4 {
	margin-top: 0;
}

.button { /* General button styles */
	padding: 10px 20px;
	border: none;
	border-radius: 5px;
	cursor: pointer;
	position: relative;
	overflow: hidden;
	transition: color 0.3s ease-in-out;
	z-index: 1;
	display: inline-block; /* Changed to inline-block for simpler layout */
}

.button::before { /* Sliding overlay */
	content: "";
	position: absolute;
	top: 0;
	left: -100%;
	width: 100%;
	height: 100%;
	transition: left 0.3s ease-in-out;
	z-index: -1;
}

.button:hover::before {
	left: 0;
}

.button i { /* Arrow icon */
	font-size: 1.2em;
	margin-left: 8px; /* Space for the arrow */
	opacity: 0;
	transition: opacity 0.3s ease-in-out;
}

.button:hover i {
	opacity: 1;
}

/* Primary Button Hover */
.primary-button {
	background-color: #00a2d3;
	color: #111111;
}

.primary-button::before {
	background-color: #0088b0; /* Medium Blue */
}

.primary-button:hover {
	color: #eeeeee;
}

/* Secondary Button Hover */
.secondary-button {
	background-color: #0088b0;
	color: #eeeeee;
	border: 1px solid #0088b0;
	padding: 8px 16px;
}

.secondary-button::before {
	background-color: #00a2d3; /* Bright Cyan */
}

.secondary-button:hover {
	color: #111111;
}

/* Dark Background Button Hover */
.dark-button {
	background-color: #162f71;
	color: #eeeeee;
	transition: background-color 0.3s ease-in-out;
}

.dark-button:hover {
	background-color: #194e70; /* Slightly lighter on hover */
}

.dark-button:hover i {
	opacity: 1;
}

/* Link Styles */
a {
	color: #00a2d3;
	text-decoration: none; /* Initially no underline */
	position: relative; /* For positioning the pseudo-element */
	transition: color 0.3s ease-in-out; /* Optional: Smooth color transition */
}

a::after {
	content: "";
	position: absolute;
	bottom: -2px; /* Adjust to position the underline */
	left: 0;
	width: 0; /* Start with zero width */
	height: 2px; /* Adjust underline thickness */
	background-color: #00a2d3; /* Underline color */
	transition: width 0.3s ease-in-out; /* Smooth width transition */
}

a:hover {
	color: #006d8e; /* Optional: Change link color on hover */
}

a:hover::after {
	width: 100%; /* Expand the underline to full width on hover */
}

/* Navigation Link Styles (Rounded Squares on Left and Bottom Hover) */
.nav-link {
	background-color: #162f71;
	color: #eeeeee;
	padding: 5px 10px;
	height: 1.2em;
	border-radius: 3px;
	text-decoration: none; /* Initially no underline */
	position: relative; /* For positioning the pseudo-elements */
	overflow: hidden; /* Clip any potential overflow */
	transition: background-color 0.3s ease-in-out, color 0.3s ease-in-out; /* Optional: Smooth color transitions */
}

.nav-link::before,
.nav-link::after {
	content: "";
	position: absolute;
	background-color: #00a2d3; /* Set the color here */
	opacity: 0; /* Initially invisible */
	transition: width 0.2s ease-out, height 0.2s ease-out, opacity 0.2s ease-out, transform 0.2s ease-out;
	pointer-events: none; /* Ensure they don't interfere with hover */
}

/* Left rounded square */
.nav-link::before {
	top: 0;
	left: 0;
	width: 6px;
	height: 100%;
	border-radius: 3px 0 0 3px; /* Rounded right side */
	transform: translateX(-100%); /* Start off-screen left */
}

/* Bottom rounded square */
.nav-link::after {
	bottom: 0;
	left: 0;
	width: 100%;
	height: 4px;
	border-radius: 0 0 3px 3px; /* Rounded top side */
	transform: translateY(100%); /* Start off-screen bottom */
}

.nav-link:hover {
	background-color: #162f71; /* Keep the original background on hover */
	color: #eeeeee; /* Keep the original text color on hover */
}

.nav-link:hover::before {
	opacity: 1; /* Fade in */
	transform: translateX(0); /* Slide in from left */
}

.nav-link:hover::after {
	opacity: 1; /* Fade in */
	transform: translateY(0); /* Slide in from bottom */
}

.style-color {
	margin: 10px;
	display: grid;
	grid-template-columns: repeat(auto-fit, minmax(300px, 1fr)); /* Responsive columns */
	gap: 10px;
}

.style-color div {
	padding: 15px;
	text-align: center;
}

.swatch {
	height: 100px;
	width: 100%;
	border-radius: 5px;
	margin-bottom: 5px;
}

/* hamburger menu styles */
#hamburger {
	width: 100%;
	height: 100%;
	font-size: 40px;
	text-align: center;
	align-content: center;
	background-color: #00a2d3; /* Bright Cyan */
	color: #111111; /* Dark Text */
}

#hamburger-menu {
	/* Existing styles */
	scroll-behavior: auto;
	/* Removed 'grid-row-gap: 0;' as 'gap' will replace it for consistency */
	display: none; /* Toggled by JS to 'grid' */
	position: fixed;
	top: 70px; /* Adjust as needed */
	right: 0;
	border: 2px solid #00a2d3;
	border-radius: 10px;
	padding: 5px;
	width: 250px;
	height: 300px;
	z-index: 1000;
	background-color: #162f71; /* Medium Blue (using one of your secondary colors) */
	color: #111111; /* Dark Text (using a contrasting neutral) */

	/* --- NEW GRID PROPERTIES FOR THE MENU CONTAINER --- */
	grid-template-columns: 1fr; /* Force all menu items into a single column */
	grid-auto-rows: min-content; /* Each row (menu item) takes only as much height as its content needs */
	gap: 10px; /* Add 10px space between grid items (menu items) */
	align-items: stretch; /* Stretch items vertically within their grid cells */
	justify-items: stretch; /* Stretch items horizontally within their grid cells (fills the 1fr column) */
	padding: 10px; /* Increased overall padding for the menu content from the edges */
}

#navigation-menu {
	padding-right: 10px;
}

/* wrapper and content styling */
#content {
	padding: 70px 50px;
	min-height: 600px;
}

#wrapper {
	width: 100%;
	height: 100vh;
}

/* header and footer styling */
header, footer {
	width: 100%;
	height: 70px;
	background-color: #0088b0; /* Medium Blue (using one of your secondary colors) */
	color: #111111; /* Dark Text (using a contrasting neutral) */
	z-index: 900;
}

header {
	position: fixed;
	top: 0;
	display: grid;
	grid-template-columns: 1fr 70px;
	padding: 0 0 0 10px;
}

footer {
	position: fixed;
	bottom: 0;
}

#author {
	align-content: center;
}

/* three js project template styling */

.details {
	padding: 50px;
}

#threejs-canvas {
	position: relative;
	width: 100%;
	height: 50vh;
	border-radius: 10px;
	margin-bottom: 20px;
	overflow: hidden;
	justify-items: center;
	align-content: center;
}

/* index styling */
#hero-unit {
	padding: 70px 20px 50px 20px;
}

/* Carousel Styles */
#carousel {
    position: relative; /* Essential for absolute positioning of controls if needed, and for carousel-view children */
    display: flex; /* Use flexbox for layout of controls and carousel-view */
    align-items: center; /* Vertically centers controls with carousel-view */
    justify-content: space-between; /* Pushes controls to the ends */
    width: 100%; /* Take full width of its parent */
    max-width: 800px; /* Example max width, adjust as needed */
    margin: 30px auto; /* Centers the carousel horizontally */
    border-radius: 30px;
    padding: 10px;
    box-shadow: 0 4px 8px rgba(0,0,0,0.1); /* Subtle shadow for depth */
}

#carousel-view {
    flex-grow: 1; /* Allows the view to take up available space between controls */
    position: relative; /* Essential for absolute positioning of carousel items within it */
    overflow: hidden; /* Hides items that are not active */
    min-height: 200px; /* Give it a minimum height to avoid collapse */
    display: flex; /* Use flexbox for carousel-items within this to handle centering */
    justify-content: center;
    align-items: center;
}

.carousel-items {
    /* These styles control the visibility and positioning of individual carousel items */
    width: 100%;
    /* Remove align-content/justify-items here as they are on #carousel-view */
    /* position: absolute; /* Consider absolute positioning for smoother transitions later if you want */
    /* top: 0; left: 0; */
}

.carousel-items.active {
    display: block; /* Shows the active item */
    /* If using position: absolute, you might also add:
    opacity: 1;
    z-index: 1;
    transition: opacity 0.5s ease-in-out;
    */
}

.carousel-items.inactive {
    display: none; /* Hides inactive items */
    /* If using position: absolute, you might also add:
    opacity: 0;
    z-index: 0;
    */
}

.carousel-controls {
    cursor: pointer;
    width: 50px; /* Kept from your original */
    height: 50%; /* Kept from your original */
    border-radius: 30px; /* Kept from your original */
    margin: auto 0; /* Kept from your original */
    display: flex; /* Use flex to center the arrow content */
    align-items: center;
    justify-content: center;
    user-select: none; /* Prevent text selection on click */
}

/* Add clear visual indicators for the controls */
.carousel-controls.left-button::before {
    content: '\276E'; /* Left arrow character */
    font-size: 1.5em;
    font-weight: bold;
}

.carousel-controls.right-button::before {
    content: '\276F'; /* Right arrow character */
    font-size: 1.5em;
    font-weight: bold;
}

/* Remove these problematic position properties from your original CSS */
.carousel-controls .left-button {
	/* position: left; /* REMOVE THIS */ */
    /* display: block; /* This is redundant with .carousel-controls now having display: flex */
}

.carousel-controls .right-button {
	/* position: right; /* REMOVE THIS */ */
}

/* You already have these, ensure they're positioned correctly if carousel items have absolute positioning */
.carousel-item-main img {
    /* ... existing styles ... */
    display: block; /* Ensures img doesn't have extra space below it */
    margin: 0 auto; /* Centers the image within its container */
}

.carousel-caption {
    text-align: center; /* Center the caption text */
    padding: 10px 0;
}

/* Desktop Styles (Apply to screens wider than a certain breakpoint, e.g., 768px or 992px) */
@media (min-width: 768px) { /* Example breakpoint for tablets and larger */
	body {
		font-size: 18px; /* Increase base font size for larger screens */
		line-height: 1.6; /* Adjust line height as needed */
	}

	h1 {
		font-size: 2.5em; /* Increase heading sizes for desktop */
	}

	h2 {
		font-size: 2em;
	}

	h3 {
		font-size: 1.5em;
	}

	h4 {
		font-size: 1.25em;
	}

	h5 {
		font-size: 1.15em;
	}

	h6 {
		font-size: 1.10em;
	}

	/* index styling */
	#hero-unit {
		padding: 70px 20px 50px 20px;
	}

	#carousel {
		display: grid;
		grid-template-columns: 1fr 7fr 1fr;
		border-radius: 30px;
		padding: 10px;
		margin: 30px 0;
		align-content: center;
		justify-items: center;
	}

	.carousel-controls {
		width: 50px;
		height: 50%;
		border-radius: 30px;
		margin: auto 0;
	}

	.carousel-controls .left-button {
		display: block;
		position: left; /* This property doesn't exist in CSS. Should be removed or replaced with 'left' or 'right' if using absolute positioning within .carousel-controls */
	}

	.carousel-controls .right-button {
		position: right; /* This property doesn't exist in CSS. Should be removed or replaced with 'left' or 'right' if using absolute positioning within .carousel-controls */
	}

	.carousel-items {
		width: 500px;
		align-content: center;
		justify-items: center;
	}

	.carousel-items div {
		align-content: center;
		justify-items: center;
	}

	.carousel-caption {
		align-content: center;
		justify-items: center;
	}

	.carousel-item-main {
		align-content: center;
		justify-items: center;
		width: 400px;
	}

	.carousel-item-main img {
		align-content: center;
		justify-items: center;
		width: 100%;
		max-width: 500px;
		padding: auto 0;
	}
}